#!/usr/bin/make -f
# -*- makefile -*-
#
# Configures, builds and installs Bob on Debian systems.

SHELL := /bin/bash

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

# find out the name of the currently built package
DEB_SOURCE_PACKAGE := $(strip $(shell egrep '^Source: ' debian/control | cut -f 2 -d ':'))

#export PYBUILD_NAME=$(DEB_SOURCE_PACKAGE)

# Only compile for the default Python version
PY2VERS := $(shell pyversions -vr debian/control)

#export PYBUILD_AFTER_INSTALL=echo "** Custom bob rules: Run nosetests for the installed package **"; \
#	cd {build_dir}; \
#	if [ $(DEB_SOURCE_PACKAGE) != bob.extension ]; then \
#	  echo "Running nosetests for package $(DEB_SOURCE_PACKAGE)"; \
#		PYTHONPATH={destdir}/{install_dir} nosetests -sv $(DEB_SOURCE_PACKAGE); \
#	else \
#		echo "Only selected tests are run for $(DEB_SOURCE_PACKAGE)"; \
#		PYTHONPATH={destdir}/{install_dir} nosetests -sv $(DEB_SOURCE_PACKAGE).test_boost; \
#		PYTHONPATH={destdir}/{install_dir} nosetests -sv $(DEB_SOURCE_PACKAGE).test_cmake; \
#		PYTHONPATH={destdir}/{install_dir} nosetests -sv $(DEB_SOURCE_PACKAGE).test_pkgconfig; \
#		PYTHONPATH={destdir}/{install_dir} nosetests -sv --exclude='test_documentation_generation' --exclude='test_find_packages' $(DEB_SOURCE_PACKAGE).test_utils; \
#	fi; \
#	echo "** Custom bob rules: run sphinx doctest to tests the documentation **"; \
#	cp -fr {dir}/doc {build_dir}; \
#	cd {build_dir}; \
#	PYTHONPATH=${PYTHONPATH}:.:{destdir}/{install_dir}:{dir}:{build_dir} http_proxy='127.0.0.1:9' sphinx-build -b doctest doc/ build/doc; \
#	rm -fr doc; \
#	rm -fr build;


%:
	dh $@ --with python2

#	dh $@ --with python2,sphinxdoc --buildsystem=pybuild
# override it, so there are no tests done here, since we perform them after the install
override_dh_auto_test:


override_dh_auto_install:
	dh_auto_install
	echo "** Custom bob rules: run nosetests and sphinx doctest for the installed package **"
	echo curdir: $(CURDIR)
	set -e; for v in $(PY2VERS) ; do \
		echo "-- running tests for python version "$$v" --" ; \
		install_dir=$(CURDIR)/debian/$(DEB_SOURCE_PACKAGE)/usr/lib/python$$v/dist-packages; \
		echo "Install Path $${install_dir}"; \
		ls $${install_dir}; \
		OS=$$(uname -s); \
		OS=$$(echo $${OS} | tr '[:upper:]' '[:lower:]'); \
		ARCH=$$(uname -m); \
		dir=lib.$${OS}-$${ARCH}-$$v; \
		build_dir=$(CURDIR)/build/$${dir}; \
		echo "Build Path: $${build_dir}"; \
		cd $${build_dir}; \
		if [ $(DEB_SOURCE_PACKAGE) = bob.extension ]; then \
			echo "Special case for bob.extension package - exclude some tests that try to access network"; \
			PYTHONPATH=$${install_dir} nosetests -svv $(DEB_SOURCE_PACKAGE).test_boost --debug=nose.importer; \
			PYTHONPATH=$${install_dir} nosetests -svv $(DEB_SOURCE_PACKAGE).test_cmake --debug=nose.importer; \
			PYTHONPATH=$${install_dir} nosetests -svv --exclude='test_cflags_other' $(DEB_SOURCE_PACKAGE).test_pkgconfig --debug=nose.importer; \
			PYTHONPATH=$${install_dir} nosetests -svv --exclude='test_documentation_generation' --exclude='test_find_packages' --exclude='test_get_config' $(DEB_SOURCE_PACKAGE).test_utils --debug=nose.importer; \
		elif [ $(DEB_SOURCE_PACKAGE) = bob.db.mnist ]; then \
			echo "We do not run the tests for $(DEB_SOURCE_PACKAGE) package, because they attempt to download stuff from Internet, which is not allowed by PPA"; \
		else \
			echo "Running nosetests for package $(DEB_SOURCE_PACKAGE) - important to add PYTHONPATH, otherwise you get import error"; \
			PYTHONPATH=.:$${install_dir} nosetests -svv --debug=nose.importer; \
		fi; \
		cp -fr $(CURDIR)/doc $${build_dir} ; \
		cd $${build_dir}; \
		if [ $(DEB_SOURCE_PACKAGE) != bob ]; then \
			echo "Running Sphinx doctest for package $(DEB_SOURCE_PACKAGE)"; \
			PYTHONPATH=$${PYTHONPATH}:$${build_dir}:$${install_dir} http_proxy='127.0.0.1:9' sphinx-build -b doctest doc/ build/doc; \
			rm -fr doc; \
			rm -fr build; \
		fi; \
		echo "Removing extra __init__.py files"; \
		cd $${install_dir}; \
		if [ $(DEB_SOURCE_PACKAGE) != bob.extension ]; then \
			echo "Removing  bob/__init__.py"; \
			rm -fr bob/__init__.py; \
		fi; \
		IFS='.' read -ra parsed_name <<< "$(DEB_SOURCE_PACKAGE)"; \
		if  [[ $${#parsed_name[@]} == 3 || $${#parsed_name[@]} == 4 ]]; then \
			if  [[ $${parsed_name[2]} != base && $${parsed_name[2]} != activation ]]; then \
	 			echo "In package $(DEB_SOURCE_PACKAGE), removing file $${parsed_name[0]}/$${parsed_name[1]}/__init__.py"; \
				rm -fr $${parsed_name[0]}/$${parsed_name[1]}/__init__.py; \
			fi; \
		fi; \
		if  [[ $${#parsed_name[@]} == 4 ]]; then \
			if  [[ $${parsed_name[3]} != hornschunck && $${parsed_name[3]} != utils ]]; then \
	 			echo "In package $(DEB_SOURCE_PACKAGE), removing file $${parsed_name[0]}/$${parsed_name[1]}/$${parsed_name[2]}/__init__.py"; \
				rm -fr $${parsed_name[0]}/$${parsed_name[1]}/$${parsed_name[2]}/__init__.py; \
			fi; \
		fi; \
	done

# use $(DEB_BUILD_GNU_TYPE) if need to generate string that looks like x86_64-linux-gnu

#override_dh_auto_install:
#	dh_auto_install
#	echo {build_dir}
#	cd {build_dir}
#	if [ $(DEB_SOURCE_PACKAGE) != bob.extension ]; then \
#	  echo "Running nosetests for package $(DEB_SOURCE_PACKAGE)"; \
#		PYTHONPATH={destdir}/{install_dir} nosetests -sv $(DEB_SOURCE_PACKAGE); \
#	else \
#		echo "Only selected tests are run for $(DEB_SOURCE_PACKAGE)"; \
#		PYTHONPATH={destdir}/{install_dir} nosetests -sv $(DEB_SOURCE_PACKAGE).test_boost; \
#		PYTHONPATH={destdir}/{install_dir} nosetests -sv $(DEB_SOURCE_PACKAGE).test_cmake; \
#		PYTHONPATH={destdir}/{install_dir} nosetests -sv $(DEB_SOURCE_PACKAGE).test_pkgconfig; \
#		PYTHONPATH={destdir}/{install_dir} nosetests -sv --exclude='test_documentation_generation' --exclude='test_find_packages' $(DEB_SOURCE_PACKAGE).test_utils; \
#
#			PYTHONPATH=$${install_dir} nosetests -svv $(DEB_SOURCE_PACKAGE).test_boost --debug=nose.importer; \
#			PYTHONPATH=$${install_dir} nosetests -svv $(DEB_SOURCE_PACKAGE).test_cmake --debug=nose.importer; \
#			PYTHONPATH=$${install_dir} nosetests -svv --exclude='test_cflags_other' $(DEB_SOURCE_PACKAGE).test_pkgconfig --debug=nose.importer; \
#			PYTHONPATH=$${install_dir} nosetests -svv --exclude='test_documentation_generation' --exclude='test_find_packages' --exclude='test_get_config' $(DEB_SOURCE_PACKAGE).test_utils --debug=nose.importer; \
#
#	fi
#	echo "** Custom bob rules: run sphinx doctest to tests the documentation **"
#	cd {dir}
#	PYTHONPATH={destdir}/{install_dir}:{dir}:{build_dir} http_proxy='127.0.0.1:9' sphinx-build -b doctest doc/ build/doc;


